{
  "platforms": {
    "redhat": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "centos": ">= 0.0.0"
  },
  "providing": {
  },
  "suggestions": {
  },
  "recipes": {
    "app_nodejs::install_modules": "Installs Node.js module",
    "app_nodejs::setup_server": "Setup Node.js installation"
  },
  "dependencies": {
    "rightscale": ">= 0.0.0",
    "app": ">= 0.0.0",
    "web_apache": ">= 0.0.0",
    "repo": ">= 0.0.0",
    "logrotate": ">= 0.0.0"
  },
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "maintainer_email": "support@rightscale.com",
  "description": "Cookbook provides an Apache + Passenger implementation of the 'app' Lightweight Resource Provider (LWRP). Installs and configures an Apache + Passenger application server.",
  "name": "app_nodejs",
  "version": "13.5.0",
  "conflicting": {
  },
  "long_description": "# RightScale App Passenger Cookbook\n\n## DESCRIPTION:\n\n* This cookbook is available at [https://github.com/rightscale/rightscale_cookbooks](https://github.com/rightscale/rightscale_cookbooks).\n* Cookbook provides Apache + Passenger implementation of the 'app' LWRP.\n* Installs and configures, Apache + Passenger application servers.\n\n## REQUIREMENTS:\n\n* Requires [\"app\" Lightweight resource cookbook][app] or your own implementation\n  of the \"app\" resource. See \"app\" cookbook README for details.\n* Requires a VM launched from a RightScale managed RightImage\n\n[app]: https://github.com/rightscale/rightscale_cookbooks/tree/master/cookbooks/app\n\n## COOKBOOKS DEPENDENCIES:\n\nPlease see `metadata.rb` file for the latest dependencies.\n\n* `rightscale`\n* `web_apache`\n* `repo`\n* `app`\n* `db`\n\n## KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n## SETUP/USAGE:\n\n* Place `app_passenger::setup_server_3_0` recipe into your runlist\n  to set up the application server specific attributes. This sets up the app\n  provider and version.\n* Place `app::install_server` recipe after setup_server recipe to install\n  the application server.\n\n## DETAILS:\n\n### General:\n\nThe `app_passenger` cookbook will install and set up Apache +\nPhusion Passenger application server configured to connect with a MySQL or\nPostgres database server. Set db/provider_type input in RightScale\nServerTemplate to choose database provider. Place `db::default` recipe\nbefore application server installation to install the database client.\n\n__Apache__\n\nServer version: Apache/2.2.3\n\nServer built: Jun 6 2012 10:00:42\n\n__Phusion Passenger__\n\nPhusion Passenger version 3.0.19\n\nalso:\n* `Rails spawn method input`\n* `Custom rails command input`\n* `Bundler support`\n* `Input for user defined gems installation`\n* `Application code installation from remote git, svn or Remote Object Store\n  (ROS) location`\n* `MySQL or Postgres database connection file configuration`\n* `Automatic application vhost file configuration`\n\nFor more info see: [Release Notes][Notes] (Section 'Apache-Rails-Passenger App\nServer' under ServerTemplates)\n\n[Notes]: http://support.rightscale.com/18-Release_Notes/ServerTemplates_and_RightImages/current\n\nPlease checkout the tutorial: [Apache-Rails-Passenger App Server][Tutorial]\n\n[Tutorial]: http://support.rightscale.com/ServerTemplates/Infinity/ST/Apache-Rails-Passenger_App_Server_(v13_Infinity)/Apache-Rails-Passenger_App_Server_(v13_Infinity)_-_Tutorial\n\nServerTemplate built on this cookbook can be combined in two modes:\n\n1 - For apps with bundler support, add the \"install_required app gems\" recipe,\nand \"run_custom_rails_commands\" for migration commands\n\n2 - For apps without bundler support, add \"install_custom_gems\" recipe, and\n\"run_custom_rails_commands\" for migration commands\n\nMix these recipes in any way to satisfy project requirements.\n\n### Attributes:\n\nThese are settings used in recipes and templates. Default values are noted.\n\nNote: Only \"internal\" cookbook attributes are described here. Descriptions of\nattributes which have inputs you can find in metadata.rb cookbook file.\n\n###### General attributes\n\n* `node[:app_passenger][:rails_spawn_method]` -\n  The spawn method used by the passenger.\n* `node[:app_passenger][:apache][:serve_local_files]` -\n  Used to enable/disable the serve of any existing local files.\n* `node[:app_passenger][:deploy_dir]` -\n  Path in the specified repository where application code will be pulled from.\n* `node[:app_passenger][:ruby_gem_base_dir]` -\n  Path to Ruby gem directory.\n* `node[:app_passenger][:gem_bin]` -\n  Path to Ruby gem bin directory.\n* `node[:app_passenger][:ruby_bin]` -\n  Path to Ruby bin directory.\n* `node[:app_passenger][:project][:environment]` -\n  The environment of the rails application.\n* `node[:app_passenger][:project][:gem_list]` -\n  A list of additional gems required for rails application.\n* `node[:app_passenger][:project][:custom_cmd]` -\n  A list of rake commands required for rails application initialization.\n\n###### Platform dependent\n\n* `node[:app][:user]` - Apache user. Required for changing owner of created\nproject dirs.\n\n### Templates:\n\n* `basic_vhost.erb` - Configuration for apache vhost file used in the\n  `app::setup_vhost` recipe and defined in `:setup_vhost` action of the\n  `app_passenger` LWRP.\n* `database.yml.erb` - Configuration for project database connection config file\n  used in the `app::setup_db_connection` recipe and defined in\n  `:setup_db_connection` action of the `app_passenger` LWRP.\n* `rails_env.erb` - Template for bash script which will set up ENV for the rails\n  project used in the `app::setup_db_connection` recipe and defined in\n  `:setup_db_connection` action of the `app_passenger` LWRP.\n\n### LWRPs:\n\n`app_passenger` Lightweight provider is defined in the providers/default.rb\nfile, it contains source for the following actions:\n\n* `:install`\n* `:setup_vhost`\n* `:start`\n* `:stop`\n* `:reload`\n* `:restart`\n* `:code_update`\n* `:setup_db_connection`\n\nFor more info about these actions, please see the `app` cookbook README.\n\nFor normal operations it requires \"app\" resource which will act as the interface\nto all `app_passenger` provider logic.\n\n##### Actions\n\n* `:install` - Install packages required for application server setup.\n* `:setup_vhost` - Set up apache vhost file with passenger module directives\n  included.\n* `:start` - Start sequence for Passenger application server.\n* `:stop` - Stop sequence for Passenger application server.\n* `:reload` - Reload sequence for Passenger application server.\n* `:restart` - Restart sequence for Passenger application server.\n* `:code_update` - Perform project source code update/download using user\n  selected \"repo\" LWRP. Set up logrotate configuration.\n* `:setup_db_connection` - Perform project config/database.yml database\n  connection configuration.\n  The driver type is specified as 'ruby' and the db_<provider> cookbook's\n  `install_client_driver` action performs necessary steps to install the\n  database adapter.\n\n##### Usage Example:\n\nFor usage examples please see corresponding section in `app` cookbook README.\n\n## LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.\nAll access and use subject to the RightScale Terms of Service available at\nhttp://www.rightscale.com/terms.php and, if applicable, other agreements\nsuch as a RightScale Master Subscription Agreement.\n",
  "replacing": {
  },
  "maintainer": "RightScale, Inc.",
  "attributes": {
    "app_nodejs/module_global": {
      "choice": [
        "true",
        "false"
      ],
      "description": "Install modules with global environment.",
      "recipes": [
        "app_nodejs::install_modules"
      ],
      "calculated": false,
      "required": "recommended",
      "default": "true",
      "type": "string",
      "display_name": "module_global"
    },
    "app_nodejs/module_list": {
      "choice": [

      ],
      "description": "Modules to be installed by npm. seperated by blank example : module1 module2 ",
      "recipes": [
        "app_nodejs::setup_server",
        "app_nodejs::install_modules"
      ],
      "calculated": false,
      "required": "optional",
      "default": "express forever",
      "type": "string",
      "display_name": "module_list"
    },
    "app_nodejs/version": {
      "choice": [

      ],
      "description": "Node.js version to be installed.",
      "recipes": [
        "app_nodejs::setup_server"
      ],
      "calculated": false,
      "required": "recommended",
      "default": "0.10.22",
      "type": "string",
      "display_name": "nodejs_version"
    },
    "app_nodejs/path_to_install": {
      "choice": [

      ],
      "description": "Set path that modules are to be installed.",
      "recipes": [
        "app_nodejs::install_modules"
      ],
      "calculated": false,
      "required": "optional",
      "type": "string",
      "display_name": "path_to_install"
    }
  },
  "groupings": {
  },
  "recommendations": {
  }
}