#!/usr/bin/perl -w

use strict;
use Sys::Hostname;
use Sys::Syslog qw(:macros);
use vars qw( $TRANSCODER $WWWROOT $VODCACHE $RIAK_CLUSTER $RIAK_BUCKET $HTTP_PROXY $NO_PROXY $TIMEOUT 
             $MAX_DISK_USAGE $REMOVAL_POLICY_MINIMUM_AGE $VODCACHE_NOATIME $VODCACHE_MAX_ENTRIES $MAX_CPU_LOAD $MAX_CPU_LOAD_HT 
             $CACHE_CLEAN_INTERVAL $EXTERNAL_TRANSCODER $EXTERNAL_TRANSCODER_API_KEY
             $CHUNK_SIZE $LS $LOGHOST $LOGLEVEL $LOGFACILITY $LOG_COPY_STDERR 
             $ERROR_MOVIE_DURATION $ERROR_MINIMUM_AGE_BEFORE_RETRY $GENERATE_STILL_STREAM $RIAK_RING_LEADER
             $MIN_MEM_AVAIL
);

##################################################
##  Configuration parameters
##################################################

# Transcoder to use. Can be transcoder_core (lgpl) 
$TRANSCODER = "transcoder_core";

# WWW root dir
$WWWROOT = "/var/opt/transcoder";

# VoD cache dir relative to WWW root
$VODCACHE = "vodcache";

# The Riak cluster.  
$RIAK_CLUSTER   = "http://<%=@riak_master_ip%>:8098/";

# The Riak Ring Leader. Set to the IP address or hostname of the ring leader 
$RIAK_RING_LEADER   = "<%=@riak_master_ip%>";

# The Riak bucket to use.  
$RIAK_BUCKET    = "transcoder";

# Need for HTTP proxy settings? Then uncomment next line(s)
# $HTTP_PROXY = 'http://localhost:3128';
# $NO_PROXY = 'localhost';

# Maximum disk usage for the VoD cache, in MB
$MAX_DISK_USAGE = 80000;

# When disk usage exceeds the specified limit, do not remove data changed less than this many
# days/hours/minutes/seconds.  Specify the value as a integer or floating value with one of the
# following suffixes:
# 'd' for days, 'h' for hours, 'm' for minutes and 's' for seconds.
# Example: 3d: 3 days, 1.25h: 1 and a quart hour
$REMOVAL_POLICY_MINIMUM_AGE = "1h";

# Maximum allowed number of entries in the vodcache directory. Used by vodcacheclean.pl
$VODCACHE_MAX_ENTRIES = 32000;

# CPU limits.  New sessions will not be started if the CPU exceeds this 
# utilization. MAX_CPU_LOAD_HT is used if hyper-threading is enabled.
$MAX_CPU_LOAD      = 80.0;
$MAX_CPU_LOAD_HT   = 80.0;

# Maximum duration, in seconds, of the error movie. This movie is generated by the transcoder when the
# source material is unavailable.
$ERROR_MOVIE_DURATION = 60;

# Whenever the transcoder cannot transcode a given source, it will mark this in the corresponding vodcache entry.
# This setting controls how much time must have been elapsed before the transcoder will honor a new request 
# with a retry of the transcode. A transcode request can fail, for example, if the source material is
# not available or in a format the transcoder does not recognize. This setting can be used to prevent overloading
# of the transcoder (by an application which keeps issueing requests for a failed transcode over and over again)
# Specify the value as a integer or floating value with one of the following suffixes:
# 'd' for days, 'h' for hours, 'm' for minutes and 's' for seconds.
# Example: 3d: 3 days, 1.25h: 1 and a quart hour
$ERROR_MINIMUM_AGE_BEFORE_RETRY = "3m";

# External transcoder URL to defer to when no resources
# $EXTERNAL_TRANSCODER = 'http://<host>/cgi-bin/transcode.pl';
# $EXTERNAL_TRANSCODER_API_KEY = 'bla';

# Interval to check for disk usage (in seconds)
$CACHE_CLEAN_INTERVAL = 30;

# Timeout - in seconds - before error movie is shown
$TIMEOUT = 12;

# Size of the .vob files

$CHUNK_SIZE = '8388608';

# External tools used from this script (assumed in path)
$LS = "ls";

# Syslog host to use
$LOGHOST = "127.0.0.1";

# $LOGLEVEL can be one of (listed from high to low severity):
# LOG_EMERG, LOG_ALERT, LOG_CRIT, LOG_ERR, LOG_WARNING, LOG_NOTICE, LOG_INFO, LOG_DEBUG
# Setting the loglevel enables logging of messages of the the provided loglevel and all
# higher severities and disables logging of log messages with a lower severity.
$LOGLEVEL = LOG_NOTICE;

$LOGFACILITY = LOG_LOCAL2;

# Whether or not to print logmessages on stderr. Development option, only enable when
# explicitly told to do so by Active Video support!
# Possible values are:
# 0: do not print logmessages on stderr
# 1: always print logmessages on stderr
# 2: auto setting: when run from a terminal, log the messages to stderr, otherwise do
#    not attempt to log to stderr.
$LOG_COPY_STDERR = 0;

#
# Generate elemetary stream with stills.
#
$GENERATE_STILL_STREAM = 1;

# Memory limits.  New sessions will only be started if there is sufficient free memory
#   > 1. The minimal amount of free memory (units in MB) that must be available
#        For example, 250 means that there must be at least 250MB available free memory
#   < 1. The minimal percentage of free memory that must be available.
#        For example, 0.15 means that at least 15% of the total memory must be available free memory.
#   Default: 250
$MIN_MEM_AVAIL      = 250;

1;
